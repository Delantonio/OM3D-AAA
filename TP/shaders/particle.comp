#version 450

#include "utils.glsl"

layout(local_size_x = 8, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) uniform Data {
    FrameData frame;
};

layout(binding = 1) buffer ParticleSSBO {
    Particle particles[];
};

uniform float dt = 0.01f;

float rand(vec2 co)
{
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main()
{
    uint index = gl_GlobalInvocationID.x;
    particles[index].age -= dt;
    if (particles[index].age < 0.0) {
        particles[index].age = particles[index].duration;
        particles[index].seed = rand(particles[index].center.xy + vec2(0.0, 1.0));
        particles[index].center = particles[index].origin;
        //particles[index].color = vec4(1.0, 0.0, 0.0, 1.0);
    }
    
    particles[index].color.r = (sin(particles[index].age * 5.0) / 2.0) + 0.5;
    particles[index].luminosity =(sin(particles[index].age * 5.0) / 2.0) + 0.5;

    vec3 direction = vec3(sin(particles[index].age * 2.0 * particles[index].seed) * 10.0, 5.0, cos(particles[index].center.z * 2.0 * particles[index].seed) * 10.0);
    particles[index].center += direction * dt * particles[index].seed * 0.5f;
}