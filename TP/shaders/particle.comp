#version 450

#include "utils.glsl"

layout(local_size_x = 8, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) uniform Data {
    FrameData frame;
};

layout(binding = 1) buffer ParticleSSBO {
    Particle particles[];
};

uniform float dt = 0.01f;

float rand(vec2 co)
{
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main()
{
    uint index = gl_GlobalInvocationID.x;
    
    particles[index].center += vec3(0.0, 1.0, 0.0) * dt;
    particles[index].color.g = mod(particles[index].color.g + dt, 1.0);
    particles[index].duration -= dt;

    vec3 direction = vec3(sin(particles[index].duration * 2.0 * particles[index].seed) * 10.0, 1.0, 0.0);
    particles[index].center += direction * dt * particles[index].seed;
}